# Air 配置文件
# 用于 Go 项目的热重载开发
# 文档: https://github.com/cosmtrek/air

root = "."
testdata_dir = "testdata"
tmp_dir = "tmp"

[build]
  # 要监视的文件扩展名
  include_ext = ["go", "tpl", "tmpl", "html"]
  # 要排除的文件扩展名
  exclude_ext = ["txt", "md", "log"]
  # 要监视的目录
  include_dir = []
  # 要排除的目录
  exclude_dir = ["assets", "tmp", "vendor", "testdata", "web", "static", ".git", ".vscode", ".github", "docs"]
  # 要排除的文件
  exclude_file = []
  # 要排除的正则表达式
  exclude_regex = ["_test\.go"]
  # 如果文件更改过于频繁，则不会重新构建
  exclude_unchanged = false
  # 在执行命令之前跟踪符号链接
  follow_symlink = false
  # 完整构建标志
  full_bin = ""
  # 要执行的命令
  cmd = "go build -o ./tmp/main ."
  # 构建后要运行的二进制文件
  bin = "tmp/main"
  # 自定义二进制文件
  full_bin = ""
  # 监视这些文件名
  include_file = []
  # 延迟毫秒数，在触发构建之前
  delay = 1000
  # 当发生构建错误时停止运行旧的二进制文件
  stop_on_error = false
  # 发送中断信号之前要等待的时间（以纳秒为单位）
  send_interrupt = false
  # 发送杀死信号之前要等待的时间（以纳秒为单位）
  kill_delay = "0s"
  # 在每次构建之前重新运行
  rerun = false
  # 延迟毫秒数，在每次重新运行之前
  rerun_delay = 500
  # 添加额外的参数给 `go build` 命令
  args_bin = []
  # 二进制文件的日志文件，默认为空，表示不记录
  log = "tmp/air.log"
  # 自定义每个部分的颜色。如果找不到颜色，使用原始应用程序日志。
  [build.color]
    # 主要
    main = "magenta"
    # 观察者
    watcher = "cyan"
    # 构建
    build = "yellow"
    # 运行器
    runner = "green"

[log]
  # 显示日志时间
  time = false
  # 只显示主要日志（静默模式）
  main_only = false

[color]
  # 自定义每个部分的颜色。如果找不到颜色，使用原始应用程序日志。
  main = "magenta"
  watcher = "cyan"
  build = "yellow"
  runner = "green"

[misc]
  # 删除每次构建时的 tmp 目录
  clean_on_exit = false

[screen]
  # 清除屏幕
  clear_on_rebuild = false
  # 启用实时重新加载
  keep_scroll = true